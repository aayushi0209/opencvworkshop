# -*- coding: utf-8 -*-
"""OpenCvWorkshop

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1toliMEfNkiEeoDc9YOMyTWmAoVfHvwrE
"""

import cv2
# pip install opencv-contrib python

image=cv2.imread('pexels4.jpeg')

from google.colab.patches import cv2_imshow
# in jupiter notebook
# cv2.imshow(image)
# cv2.waitKey(0)//to hold screen
cv2_imshow(image)

type(image)

image

image.dtype

shape=image.shape

shape
# BGR

image[:,:,2]=0
cv2_imshow(image)

image[:,:,1]=0
cv2_imshow(image)

h,w,d=image.shape

import numpy as np
import cv2
a=np.zeros((300,300,3),dtype='uint8')
a[100:300,50:150]-[0,240,255]
cv2_imshow(a)

cv2.imwrite('myimage.jpg',a)

image=cv2.imread('pexels4.jpeg')
image=cv2.resize(image,(300,300))
gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
cv2_imshow(gray)
# gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
# cv2_imshow(gray)
edges=cv2.Canny(gray,60,200)
cv2_imshow(edges)

resize=cv2.resize(image,(200,200))
cv2_imshow(resize)

image=cv2.imread('2.jpg')
image=cv2.resize(image,(200,200))
cv2_imshow(image)

# convert to gray scale
gray=cv2.cvtColor(image,cv2.COLOR_BGR2GRAY)
cv2_imshow(gray)

# Edge Detection->Canny
edges=cv2.Canny(gray,60,200)
cv2_imshow(edges)

threshold= 235
thresh=cv2.threshold(edges,145,255,cv2.THRESH_BINARY_INV)[1]
cv2_imshow(thresh)

